/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.guisehn.telas;

import com.guisehn.db.PalavrasProvider;
import com.guisehn.db.TemasProvider;
import com.guisehn.entidades.Palavra;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author guilhermesehn
 */
public final class TelaListagemPalavras extends javax.swing.JFrame {

    private final DefaultTableModel palavrasModel;
    private final DefaultComboBoxModel temasModel;
    private final TelaAdicionarPalavra telaAdicionarPalavra;
    private List<Palavra> palavras;
    
    /**
     * Creates new form TelaListagemPalavras
     */
    public TelaListagemPalavras() {
        initComponents();
        
        this.palavras = new ArrayList<>();

        telaAdicionarPalavra = new TelaAdicionarPalavra();
        telaAdicionarPalavra.setTelaListagemPalavras(this);
        
        palavrasModel = new DefaultTableModel(
            new Object[][] {},
            new Object[] { "Palavra" }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            } 
        };
        
        tblPalavras.setModel(palavrasModel);
        
        temasModel = new DefaultComboBoxModel();
        ddlTemaSelecionado.setModel(temasModel);
    }

    public void atualizarTemas() {
        temasModel.removeAllElements();
        
        List<String> temas = TemasProvider.buscarTemas();
        for (String tema : temas) {
            temasModel.addElement(tema);
        }
        
        if (temas.size() > 0) {
            temasModel.setSelectedItem(temas.get(0));
            atualizarPalavras();
        }
    }
    
    public void atualizarPalavras() {
        String temaSelecionado = (String)temasModel.getSelectedItem();
        
        if (temaSelecionado == null)
            palavras = new ArrayList<>();
        else
            palavras = PalavrasProvider.buscarPalavras(temaSelecionado, false);

        // Remove todas as linhas
        int numRows = palavrasModel.getRowCount();
        for (int i = numRows - 1; i >= 0; i--) {
            palavrasModel.removeRow(i);
        }
        
        // Escreve de novo
        for (Palavra palavra : palavras) {
            palavrasModel.addRow(new Object[] {
                palavra.getPalavra()
            });
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ddlTemaSelecionado = new javax.swing.JComboBox();
        lblTema = new javax.swing.JLabel();
        btnAdicionarPalavra = new javax.swing.JButton();
        btnExcluirPalavra = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPalavras = new javax.swing.JTable();

        setTitle("Cadastro de Palavras");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ddlTemaSelecionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlTemaSelecionadoActionPerformed(evt);
            }
        });

        lblTema.setText("Escolher tema:");

        btnAdicionarPalavra.setText("Adicionar palavra");
        btnAdicionarPalavra.setToolTipText("");
        btnAdicionarPalavra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarPalavraActionPerformed(evt);
            }
        });

        btnExcluirPalavra.setText("Excluir palavra");
        btnExcluirPalavra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPalavraActionPerformed(evt);
            }
        });

        tblPalavras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPalavras);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ddlTemaSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionarPalavra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirPalavra))
                            .addComponent(lblTema))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblTema)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ddlTemaSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarPalavra)
                    .addComponent(btnExcluirPalavra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ddlTemaSelecionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlTemaSelecionadoActionPerformed
        atualizarPalavras();
    }//GEN-LAST:event_ddlTemaSelecionadoActionPerformed

    private void btnAdicionarPalavraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarPalavraActionPerformed
        telaAdicionarPalavra.setTema(temasModel.getSelectedItem().toString());
        telaAdicionarPalavra.limparCampo();
        telaAdicionarPalavra.setVisible(true);
        telaAdicionarPalavra.focarCampo();
    }//GEN-LAST:event_btnAdicionarPalavraActionPerformed

    private void btnExcluirPalavraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPalavraActionPerformed
        int row = tblPalavras.getSelectedRow();
        
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma palavra");
            return;
        }
        
        Palavra palavra = palavras.get(row);
        
        int opcao = JOptionPane.showConfirmDialog(
            null,
            "Deseja mesmo excluir a palavra \"" + palavra.getPalavra() + "\"?",
            "Excluir tema",
            JOptionPane.YES_NO_OPTION
        );
        
        if (opcao == JOptionPane.YES_OPTION) {
            PalavrasProvider.excluirPalavra(palavra.getId());
            atualizarPalavras();
        }
    }//GEN-LAST:event_btnExcluirPalavraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaListagemPalavras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaListagemPalavras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaListagemPalavras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaListagemPalavras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaListagemPalavras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarPalavra;
    private javax.swing.JButton btnExcluirPalavra;
    private javax.swing.JComboBox ddlTemaSelecionado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTema;
    private javax.swing.JTable tblPalavras;
    // End of variables declaration//GEN-END:variables
}
